{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","prototype","PropType","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","id","medium_cover_image","React","Component","Navigation","props","console","log","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"2SAceA,MAXf,WACI,OACI,sBAAKC,UAAU,mBAAf,UACI,iSAGA,yE,gGCAZ,SAASC,EAAT,GAAyD,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OACI,qBAAKN,UAAU,QAAf,SACI,eAAC,IAAD,CAAMO,GAAI,CACNC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,WAF3C,UAIA,qBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,sBAAKF,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BE,IAC9B,oBAAIF,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,eAAd,SACKM,EAAOM,KAAI,SAACC,EAAOC,GAChB,OACA,oBAAgBd,UAAU,eAA1B,SACKa,GADIC,QAMjB,oBAAGd,UAAU,iBAAb,UAA+BI,EAAQW,MAAM,EAAG,KAAhD,iBAOhBd,EAAMe,UAAY,CACdb,KAAMc,IAASC,OAAOC,WACtBjB,MAAOe,IAASG,OAAOD,WACvBf,QAASa,IAASG,OAAOD,WACzBd,OAAQY,IAASG,OAAOD,WACxBb,OAAQW,IAASI,QAAQJ,IAASG,QAAQD,YAG/BlB,QCvCTqB,G,kNAEJb,MAAQ,CACNc,WAAW,EACXC,OAAQ,I,EAQVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAQZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAXzB,2C,uDAeZ,WACEQ,KAAKN,c,oBAIP,WAEE,MAA8BM,KAAKtB,MAA3Bc,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAInB,OAAQ,yBAASxB,UAAU,YAAnB,SACLuB,EACC,qBAAKvB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACCwB,EAAOZ,KAAI,SAAAY,GAAM,OAChB,cAAC,EAAD,CAEEQ,GAAIR,EAAOQ,GACX7B,KAAMqB,EAAOrB,KACbD,MAAOsB,EAAOtB,MACdE,QAASoB,EAAOpB,QAChBC,OAAQmB,EAAOS,mBACf3B,OAAQkB,EAAOlB,QANVkB,EAAOQ,e,GA/CPE,IAAMC,YA+DVb,I,MCrDAc,MAVf,SAAoBC,GAEhB,OADAC,QAAQC,IAAIF,GAER,sBAAKrC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCRNiC,E,uKACF,WACI,MAA8BT,KAAKM,MAA3BI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAEIC,IAAnBF,EAAShC,OACRiC,EAAQE,KAAK,O,oBAIrB,WACI,IAAQH,EAAaV,KAAKM,MAAlBI,SACR,OAAGA,EAAShC,MACD,+BAAOgC,EAAShC,MAAMP,QAEtB,S,GAdEgC,IAAMC,WAoBZK,ICAAK,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1B,IACxC,cAAC,IAAD,CAAOwB,KAAK,SAASE,UAAWjD,IAChC,cAAC,IAAD,CAAO+C,KAAK,gBAAgBE,UAAWR,QCX7CS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.42cf270a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n            ““자유는 2 더하기 2가 4라고 말할 수 있는 자유입니다. 그것이 허용되면 다른 모든 것이 따릅니다.”\r\n            </span>   \r\n            <span>- 조지 오웰, 1984</span>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","//함수형 컴포넌트\r\n\r\nimport React from 'react';\r\nimport PropType from 'prop-types';\r\nimport './Movie.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//class -> className으로 변경(HTML과 JSX의 class이름이 겹치기에 className으로 변경)\r\n//summary는 180자로 제한\r\nfunction Movie({ title, year, summary, poster, genres }){\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link to={{\r\n                pathname: '/movie-detail',\r\n                state: { year, title, summary, poster, genres },\r\n            }}>\r\n            <img src={poster} alt={title} title={title} />  \r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genre\"> \r\n                    {genres.map((genre, index) => {\r\n                        return (\r\n                        <li key={index} className=\"movie__genre\"> \r\n                            {genre}\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    ); \r\n}\r\n\r\nMovie.prototype = { \r\n    year: PropType.number.isRequired,    //year : number 며 필수 조건\r\n    title: PropType.string.isRequired,   //title : string 며 필수 조건\r\n    summary: PropType.string.isRequired, //summary : string 며 필수 조건\r\n    poster: PropType.string.isRequired,  //poster : string 며 필수 조건\r\n    genres: PropType.arrayOf(PropType.string).isRequired, //genres: 문자열을 원소로 하는 배열이며 필수 조건 \r\n };\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  //상태 부분\r\n  state = {\r\n    isLoading: true, //영화 앱 로딩 중 상태 변수\r\n    movies: [], //영화 데이터가 저장될 배열\r\n  }\r\n  //데이터 흐름\r\n  //render()로 로딩중 표시 하는 동안 \r\n  //getMovies에 데이터 저장한 뒤 \r\n  //componentDidMount()로 데이터 호출\r\n\r\n  //async : getMovies() 함수는 비동기 함수라고 선언\r\n  getMovies = async () => {\r\n    const {  //movies.data.data.movies를 구조 분해 할당 방식으로 변경 이게 더 헷깔리는데?\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');  //await : axios.get()는 작업이 끝날때까지 기다려 달라고 선언, 평점 정렬 부분 추가 \r\n    //state에 있는 변수 : 구조 분해 할당의 변수 \r\n    // this.setState({ movies: movies }); \r\n    \r\n    //state에 있는 변수 : 구조 분해 할당의 변수 이름이 같다면 축약할 수 있다.\r\n    //로딩중 상태를 바꾸기 위해 isLoading: false로 변경\r\n    this.setState({ movies, isLoading: false });\r\n  }\r\n\r\n  //render()는 로딩중으로 표시 되는 동안 비동기 함수인 getMovies() 실행\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  //클래스 형에서는 render()이 반환 함수다.\r\n  render() {\r\n    //로딩중 상태\r\n    const { isLoading, movies } = this.state;\r\n\r\n    //로딩 중 or movies데이터 출력 (삼항 연산자)\r\n    //class -> className으로 변경(HTML과 JSX의 class이름이 겹치기에 className으로 변경)\r\n    return (<section className='container'>\r\n      {isLoading ? (\r\n        <div className='loader'>\r\n          <span className=\"loader__text\">Loading...</span>\r\n        </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n          {movies.map(movies => (\r\n            <Movie\r\n              key={movies.id} //key props는 유일해야 하므로 id를 활용\r\n              id={movies.id}\r\n              year={movies.year}\r\n              title={movies.title}\r\n              summary={movies.summary}\r\n              poster={movies.medium_cover_image} //이미지 URL\r\n              genres={movies.genres}\r\n            /> //Movie 컴포넌트 출력\r\n          ))}\r\n      </div>\r\n      )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n//전체 새로고침을 막기 위해 a -> Link 사용\r\nfunction Navigation(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        //만약 상태키가 없다면 홈화면으로 리다이렉트\r\n        if(location.state === undefined) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if(location.state) {\r\n            return <span>{location.state.title}</span>\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport About from './routes/About';\r\nimport Home from './routes/Home';\r\nimport Navigation from './components/Navigation';\r\nimport Detail from './routes/Detail';\r\n\r\n\r\n//Route를 사용하기 위해선 npm install react-router-dom@5 으로 5 버전을 써야 한다\r\n//6 버전은 <Routes></Routes>로 묶어줘야 하지만 내부가 보이지 않는다. 겨우 찾았네 ㅡ.ㅡ\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie-detail\" component={Detail} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n//ID가 root인 엘리먼트에 App 컴포넌트를 그린다.\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}